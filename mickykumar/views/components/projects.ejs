<%
  const tagsSet = new Set();
  const associatedSet = new Set();

  projects.forEach(p => {
    if (Array.isArray(p.tags)) p.tags.forEach(t => tagsSet.add(t));
    if (Array.isArray(p.associated)) p.associated.forEach(a => associatedSet.add(a));
  });

  const tags = Array.from(tagsSet).sort();
  const associated = Array.from(associatedSet).sort();
%>

<style>
  /* === BOOK STYLE (Closed on Shelf) === */
  .book {
    perspective: 1500px;
    width: 180px;
    height: 280px;
    position: relative;
    cursor: pointer;
    transition: transform 0.3s;
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    display: flex;
    flex-direction: column;
    overflow: hidden;
  }
  .book:hover {
    transform: scale(1.05);
    box-shadow: 0 10px 20px rgba(0,0,0,0.2);
  }
  .book img {
    width: 100%;
    height: 180px;
    object-fit: contain;
    border-radius: 8px 8px 0 0;
    flex-shrink: 0;
  }
  .book h3 {
    text-align: center;
    font-size: 1.1rem;
    color: black;
    margin: 10px 8px 0 8px;
    flex-grow: 1;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    font-weight: 600;
  }

  /* === POPUP OVERLAY === */
  .book-popup {
    display: none;
    position: fixed;
    inset: 0;
    background: rgba(0,0,0,0.85);
    justify-content: center;
    align-items: center;
    z-index: 9999;
    padding: 20px;
  }
  .book-popup.active {
    display: flex;
  }

  /* === OPEN BOOK TWO-PAGE === */
  .book-open {
    display: flex;
    width: 720px;
    height: 480px;
    perspective: 2000px;
    position: relative;
    background: #fffdf5;
    border-radius: 10px;
    box-shadow: 0 15px 40px rgba(0,0,0,0.3);
    overflow: hidden;
  }
  .book-page {
    width: 50%;
    height: 100%;
    padding: 20px 30px;
    box-sizing: border-box;
    overflow-y: auto;
    backface-visibility: hidden;
    color: black;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }
  .book-left {
    border-right: 1px solid #ccc;
    display: flex;
    flex-direction: column;
  }
  .book-left img {
    max-width: 100%;
    max-height: 320px;
    object-fit: contain;
    border-radius: 6px;
    margin-top: 10px;
    align-self: center;
  }
  .book-right {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  /* Scrollbar styling */
  .book-page::-webkit-scrollbar {
    width: 8px;
  }
  .book-page::-webkit-scrollbar-thumb {
    background-color: rgba(0,0,0,0.15);
    border-radius: 4px;
  }

  /* Close button */
  .book-close {
    position: absolute;
    top: 10px;
    right: 15px;
    background: #ff5c5c;
    color: white;
    border: none;
    padding: 6px 12px;
    border-radius: 5px;
    font-weight: bold;
    cursor: pointer;
    font-size: 1rem;
    z-index: 10;
    transition: background-color 0.3s;
  }
  .book-close:hover {
    background: #e04e4e;
  }

  /* Sidebar style */
  aside {
    background: linear-gradient(to bottom, #f0f4f8, #e1e8ef);
    border-right: 2px solid #cbd5e1;
  }

  /* Bookshelf layout */
  #projectsContainer {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
  }
</style>

<section id="projects" class="py-10 max-w-7xl mx-auto px-6 bg-white">
  <h2 class="text-3xl font-bold mb-8 text-black">Project Library</h2>

  <div class="flex flex-col lg:flex-row gap-8">
    <!-- Filters Sidebar -->
    <aside class="w-full lg:w-1/4 p-6 rounded-lg shadow border border-gray-200 sticky top-20 max-h-[80vh] overflow-y-auto">
      <div class="mb-6">
        <label for="searchInput" class="block text-lg font-semibold mb-2 text-black">Search Titles</label>
        <input type="text" id="searchInput" placeholder="Search projects..."
          class="w-full px-3 py-2 border rounded focus:outline-none text-black bg-white"
          oninput="applyFilters()" autocomplete="off" spellcheck="false"/>
      </div>

      <div class="mb-6">
        <label for="sortSelect" class="block text-lg font-semibold mb-2 text-black">Sort By</label>
        <select id="sortSelect" class="w-full px-3 py-2 border rounded focus:outline-none text-black bg-white"
          onchange="applyFilters()">
          <option value="newest">Newest</option>
          <option value="oldest">Oldest</option>
        </select>
      </div>

      <div class="mb-6">
        <h3 id="tagsLabel" class="text-lg font-semibold mb-3 border-b border-gray-300 pb-1 text-black">Tags</h3>
        <div id="tagFilters" class="flex flex-col gap-2 max-h-48 overflow-y-auto pr-1 text-black">
          <% tags.forEach(tag => { %>
            <label class="flex items-center gap-2 cursor-pointer">
              <input type="checkbox" value="<%= tag %>" class="cursor-pointer accent-blue-600" onchange="applyFilters()" />
              <span><%= tag %></span>
            </label>
          <% }) %>
        </div>
      </div>

      <div class="mb-6">
        <h3 id="associatedLabel" class="text-lg font-semibold mb-3 border-b border-gray-300 pb-1">Associated</h3>
        <div id="associatedFilters" class="flex flex-col gap-2 max-h-48 overflow-y-auto pr-1">
          <% associated.forEach(a => { %>
            <label class="flex items-center gap-2 cursor-pointer">
              <input type="checkbox" value="<%= a %>" class="cursor-pointer accent-purple-600" onchange="applyFilters()" />
              <span><%= a %></span>
            </label>
          <% }) %>
        </div>
      </div>

      <button onclick="resetFilters()" class="w-full py-2 bg-blue-700 text-white rounded hover:bg-blue-800 transition">
        Reset Filters
      </button>
    </aside>

    <!-- Projects List -->
    <main class="w-full lg:w-3/4" id="projectsContainer"></main>
  </div>
</section>

<!-- Popup Book -->
<div id="bookPopup" class="book-popup" tabindex="-1" aria-modal="true" role="dialog">
  <div class="book-open" id="bookOpen">
    <button class="book-close" onclick="closeBook()" aria-label="Close book popup">X</button>
    <div class="book-page book-left" id="bookLeft"></div>
    <div class="book-page book-right" id="bookRight"></div>
  </div>
</div>

<script>
  const projects = <%- JSON.stringify(projects) %>;

  function applyFilters() {
    const searchText = document.getElementById('searchInput').value.toLowerCase().trim();
    const sortOrder = document.getElementById('sortSelect').value;

    const selectedTags = Array.from(document.querySelectorAll('#tagFilters input:checked'))
      .map(cb => cb.value);

    const selectedAssociated = Array.from(document.querySelectorAll('#associatedFilters input:checked'))
      .map(cb => cb.value);

    let filtered = projects.filter(project => {
      const matchText = project.name.toLowerCase().includes(searchText) ||
                        project.description.toLowerCase().includes(searchText);
      if (!matchText) return false;

      if (!selectedTags.every(tag => project.tags?.includes(tag))) return false;
      if (!selectedAssociated.every(a => project.associated?.includes(a))) return false;
      return true;
    });

    if (sortOrder === 'oldest') filtered = filtered.slice().reverse();
    renderProjects(filtered);
  }

  function renderProjects(projectsToRender) {
    const container = document.getElementById('projectsContainer');
    container.innerHTML = '';

    if (projectsToRender.length === 0) {
      container.innerHTML = '<p class="text-center text-black w-full">No projects found.</p>';
      return;
    }

    projectsToRender.forEach(project => {
      const div = document.createElement('div');
      div.className = 'book';
      div.innerHTML = `
        <img src="${project.image}" alt="${project.name}" loading="lazy" />
        <h3 title="${project.name}">${project.name}</h3>
      `;
      div.addEventListener('click', () => openBook(project));
      container.appendChild(div);
    });
  }

  function openBook(project) {
    document.getElementById('bookLeft').innerHTML = `
      <h2 class="text-xl font-bold mb-2">${project.name}</h2>
      <img src="${project.image}" alt="${project.name}" />
    `;
    document.getElementById('bookRight').innerHTML = `
      <p style="white-space: pre-wrap;">${project.description}</p>
      <div>${(project.skills?.map(s => `<span style="background:#eee; padding:2px 6px; margin:0 4px 4px 0; border-radius:4px; font-size:12px; color:#333;">${s.name}</span>`) || []).join('')}</div>
      <div>${(project.tags?.map(t => `<span style="background:#d0e8ff; color:#0366d6; padding:3px 7px; margin:0 6px 6px 0; border-radius:5px; font-size:13px;">${t}</span>`) || []).join('')}</div>
      ${project.link ? `<a href="${project.link}" target="_blank" rel="noopener noreferrer" style="color:#0366d6; text-decoration:underline;">View Project</a>` : ''}
    `;
    document.getElementById('bookPopup').classList.add('active');
    document.getElementById('bookPopup').focus();
  }

  function closeBook() {
    document.getElementById('bookPopup').classList.remove('active');
  }

  function resetFilters() {
    document.getElementById('searchInput').value = '';
    document.getElementById('sortSelect').value = 'newest';
    document.querySelectorAll('#tagFilters input').forEach(cb => cb.checked = false);
    document.querySelectorAll('#associatedFilters input').forEach(cb => cb.checked = false);
    applyFilters();
  }

  document.addEventListener('keydown', e => {
    if (e.key === 'Escape') {
      closeBook();
    }
  });

  document.addEventListener('DOMContentLoaded', applyFilters);
</script>
